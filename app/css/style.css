:root {
    --foreground-colour: #000a0c;
    --background-colour: #fff;
    --secondary-colour: #787f86;
    --a-colour: #0e697e;
    --a-visited-colour: #084452;
    --selection-colour: #12788f33;
    --img-onhover-colour: rgba(0, 0, 0, .06);
}

@media screen and (prefers-color-scheme: dark) {
    :root {
        --foreground-colour: #f3f9fc;
        --background-colour: #161618;
        --secondary-colour: #c5c9ce;
        --a-colour: #91d6e5;
        --a-visited-colour: #56b8cd;
        --selection-colour: #91d6e533;
        --img-onhover-colour: rgba(255, 255, 255, .06); 
    }
}

::-moz-selection {
    background: var(--selection-colour);
}
  
::selection {
    background: var(--selection-colour);
}

html {
    font-size: 18px; /* Define rem */
    line-height: 1.667;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: geometricPrecision !important;
}

body {
    color: var(--foreground-colour);
    font-family: 'Noto Serif TC', 'Noto Serif SC', 'Noto Serif JP', 'STSong', 'SimSun', serif;
    writing-mode: vertical-rl;

    hanging-punctuation: allow-end last;

    padding: 3.334rem;
    background-color: var(--background-colour);

    -moz-font-feature-settings: "locl";
    -webkit-font-feature-settings: "locl";
    font-feature-settings: "locl";
}

h1, p, blockquote, h3 {
    font-size: 1rem;
    max-height: 32rem;
    margin: 0;
}

small {
    font-size: 0.75rem;
}

header {
    margin-left: 5rem; /* 3lh */

    max-height: 32rem;
}

h1, h3 {
    font-weight: 900;
}

h1 {
    font-family: Helvetica, sans-serif;
}

h3 {
    margin: 0 3.334rem 0 1.667rem; /* 2lh 1lh */
}

p, blockquote {
    text-align: justify;
    text-indent: 1rem;
}

blockquote {
    margin-top: -16px;
    border-top: 2px solid var(--foreground-colour);
    padding-top: 14px;
}

em {
    font-style: normal;
    text-emphasis: '\25AA';
    -webkit-text-emphasis: '\25AA';
    /* Would it be nice if offset can be customised */
}

em > .latin {
    font-style: italic;
    text-emphasis: none;
    -webkit-text-emphasis: none;
}

a {
    color: var(--a-colour);
    text-decoration: none;
    
    transition-duration: 0.2s;
}

a:hover {
    color: var(--a-visited-colour)
}

hr {
    border: none;
    margin: 0;
}

hr::before {
    content: "❧";
    display: block;
    text-align: center;
    margin: 0 1.667rem;
    max-height: 32rem;

    position: relative;
    left: 0.273rem;
}

img {
    max-height: 32rem;
}

figure {
    margin: 0 1.667rem 0;
}

figure > img {
    transition-duration: 0.2s;
}

figure > img:hover {
    background-color: var(--img-onhover-colour);
}

figcaption {
    max-height: 32rem;
    color: var(--secondary-colour);
    text-align: center;
}

.latin {
    font-family: 'Crimson Pro', Garamond, Georgia, serif;
    font-weight: 339;

    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;

    -moz-hyphenate-limit-chars: 5 3 2;
    -webkit-hyphenate-limit-chars: 5 3 2;
    -ms-hyphenate-limit-chars: 5 3 2;
    hyphenate-limit-chars: 5 3 2;

    position: relative;
    left: 0.083rem;
}

b, strong .latin {
    font-weight: 586;
}

.tcy {
    -webkit-text-combine: horizontal;
    -moz-text-combine-upright: all;
    -ms-text-combine-horizontal: all;
    text-orientation: all;
}

.latin-full-width {
    text-transform: full-width;
}

/* This will crop the lower part of closing brackets */
.squeeze-out {
    letter-spacing: -0.5rem;
}

.squeeze-in {
    margin-top: -0.5rem;
}

/* Remove spaces between multiple opening brackets */
.squeeze-in + .squeeze-in-space {
    display: none;
}

.squeeze-other-punc + .squeeze-in-space {
    display: none;
}

.squeeze-out-space + .squeeze-in-space {
    /* Optional */
    /* display: none; */
}

.squeeze-out-space {
    display: none;
}

/* Only the last closing bracket will be displayed */
.squeeze-out-space:last-child {
    display: inline;
}

.debug .correct-punc {
    font-family: 'Noto Serif JP', serif;
}

.debug .squeeze-in {
    color: red;
}

.debug .squeeze-out {
    color: darkcyan;
}

.debug .squeeze-in-space {
    background-color: rgba(255, 0, 0, 0.5);
}

.debug .squeeze-out-space {
    background-color: rgba(0, 139, 139, 0.5);
}